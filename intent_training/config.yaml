# ===================== 数据路径配置 =====================
intent_data_path: intent_training/data/raw/intent_sample.csv   # 意图识别数据CSV路径
slot_data_path: intent_training/data/raw/slot_sample.conll     # 槽位填充数据CoNLL路径
golden_test:
  intent_data_path: intent_training/data/golden_test/intent_test.csv   # 黄金测试集意图数据路径
  slot_data_path: intent_training/data/golden_test/slot_test.conll     # 黄金测试集槽位数据路径

# ===================== 数据切分参数 =====================
test_size: 0.2        # 测试集占比，0~1之间小数
val_size: 0.1         # 验证集占比，0~1之间小数
random_state: 42      # 随机种子，保证实验可复现
stratify: true        # 是否分层抽样，true/false
min_query_length: 3   # 查询最小长度，过滤过短无效数据
max_query_length: 200 # 查询最大长度，过滤过长异常数据
min_sentence_length: 2   # 槽位句子最小长度
max_sentence_length: 100 # 槽位句子最大长度

# ===================== 特征工程参数 =====================
feature_type: pa  # 特征提取器类型：basic=基础特征，advanced=高级特征，pa=Position-Aware特征
intent_feature:
  max_features: 1000  # TF-IDF最大特征数
  ngram_range: [1, 2] # ngram范围，(1,2)表示1-2gram
  min_df: 1           # 最小文档频率，过滤低频特征
  analyzer: char      # 分析粒度，char=字符级，word=词级
  intent_tfidf: intent_tfidf.pkl  # TF-IDF特征提取器文件名

slot_feature:
  max_features: 1000  # 槽位特征最大数
  ngram_range: [1, 2] # 槽位特征ngram范围

# ===================== 高级特征提取器配置 =====================
advanced_feature:
  # 句向量融合配置
  enhanced:
    use_sentence_embedding: true  # 是否使用句向量融合
    sentence_model: "shibing624/text2vec-base-chinese"  # 句向量模型
    # 网络配置
    network_timeout: 30  # 网络超时时间（秒）
    allow_offline: true  # 是否允许离线模式
    fallback_to_zero: true  # 网络失败时是否回退到零向量
  
  # 路径配置
  vocab_dir: "dict/wh40k_vocabulary"  # WH40K词汇表目录
  basic_keywords: ["战锤", "40k", "wh40k"]  # 基本关键词列表
  
  # TF-IDF特征配置（字符级特征）
  tfidf:
    max_features: 1500  # 最大特征数（增加）
    ngram_range: [1, 3] # ngram范围（增加三元组）
    min_df: 1           # 最小文档频率
    analyzer: char       # 分析粒度
  
  # 句子复杂度计算配置
  complexity:
    max_sentence_length: 20.0  # 最大句子长度阈值
    long_word_threshold: 4     # 长词长度阈值
    very_long_word_threshold: 6  # 超长词长度阈值
    punctuation_threshold: 10.0  # 标点符号复杂度阈值
    weight_length: 0.25        # 长度复杂度权重
    weight_unique: 0.25        # 词汇多样性权重
    weight_long_word: 0.25     # 长词复杂度权重
    weight_punctuation: 0.25   # 标点符号复杂度权重
  
  # 句子复杂度特征开关
  complexity_feature:
    enabled: true              # 是否启用句子复杂度特征
  
  # 统计特征配置
  statistical:
    long_word_threshold: 4     # 长词长度阈值
    very_long_word_threshold: 6  # 超长词长度阈值
  
  # 标点符号配置
  punctuation:
    question_exclamation: "？？!！"  # 问号感叹号
    brackets: "（）【】"         # 括号
    others: "：；，。"          # 其他标点
    all_punctuation: "，。！？；：（）【】"  # 所有标点符号
  
  # pa_feature.py 专用权重配置
  pa_feature_weights:
    char_weight: 1.0      # 字符特征权重降低
    semantic_weight: 1.5  # 语义特征权重降低
    statistical_weight: 1.8  # 统计特征权重提高
    complexity_weight: 1.5  # 复杂度特征权重
    sentence_weight: 0.5  # 句向量权重
  
  # ad_feature.py 专用权重配置
  ad_feature_weights:
    char_weight: 1.2      # 字符特征权重
    semantic_weight: 1.8  # 语义特征权重
    statistical_weight: 1.5  # 统计特征权重
    sentence_weight: 0.5  # 句向量权重
  
  # 恶意词和辅助词特征配置
  evilgood_feature:
    # 恶意词权重：检测到恶意词时，将pa_feature_weights中所有权重(char_weight、semantic_weight、statistical_weight、complexity_weight、sentence_weight)全部乘以此值，目的是恶意查询的所有特征权重大幅降低，导致置信度低于阈值，被分类为"NON-WH40K"
    malicious_weight: 0.0001
    # 辅助词权重：检测到辅助词时，将semantic_weight乘以此值，降低语义特征权重，突出其他特征，目的是减少辅助词对最终分类的干扰，突出核心意图特征
    helper_weight: 0.9
    # 恶意词模式列表
    malicious_patterns:
      - "我不想知道"
      - "不要告诉我"
      - "别说出来"
      - "不想知道"
      - "别说了"
      - "闭嘴"
      - "不要回答"
      - "别回答"
      - "我不想听"
      - "不要解释"
      - "别解释"
      - "不想了解"
      - "不要说明"
      - "别说明"
      - "不想查询"
      - "不要查询"
      - "不想听你解释"
      - "别跟我说"
      - "不说"
      - "别告诉我"
      - "别说"
      - "别跟我说"
      - "没兴趣了解"
      - "不要给我解释"
    # 辅助词模式列表
    helper_patterns:
      - "我想知道"
      - "告诉我"
      - "回答我"
      - "请回答"
      - "帮我查一下"
      - "能否说明"
      - "请解释"
      - "帮我看看"
      - "能否告诉我"
      - "请告诉我"
      - "帮我查询"
      - "能否查询"
      - "我有个问题"
      - "我有个疑问"
      - "我有个困惑"
      - "我有个不解"
  
  # 意图关键词配置
  intent_keywords:
    compare:
      - "哪个"
      - "相比"
      - "比较"
      - "更"
      - "最高"
      - "最低"
      - "最远"
      - "最近"
      - "最长"
      - "最短"
      - "哪个更高"
      - "哪个更低"
      - "哪个更好"
      - "哪个更差"
      - "哪个更小"
      - "哪个更大"
    list:
      - "有哪些"
      - "多少个"
      - "列举"
      - "哪些"
      - "多少种"
      - "各是多少"
      - "都有哪些"
      - "都是什么"
      - "都是多少"
      - "多少个"
      - "有哪些"
      - "都是谁"
      - "都有谁"
      - "哪些种"
      - "哪个类"
      - "各是多少"
      - "都有哪些"
      - "都有什么"
      - "都有多少"
      - "都...哪些"
      - "哪些...可以"
      - "哪些...能够"
      - "哪些...拥有"
      - "哪些...具备"
    query:
      - "什么是"
      - "如何"
      - "解释"
      - "说明"
      - "定义"
      - "是什么"
      - "什么意思"
      - "怎么用"
      - "怎么触发"
      - "怎么计算"
      - "是啥"
      - "告诉我"
      - "我想知道"
      - "帮我查一下"
      - "请解释"
      - "能否说明"
      - "什么类型"
      - "什么关键字"
      - "什么技能"
      - "什么样的"
    rule:
      - "什么情况下"
      - "如何触发"
      - "规则"
      - "何时"
      - "条件"
      - "当...时"
      - "在...时"
      - "在...后"
      - "什么时候"
      - "什么条件"
      - "什么要求"
      - "什么限制"
      - "如果...那么"
      - "当...的时候"
      - "在...的情况下"
      - "在...前"
      - "什么变化"
      - "需要满足"
      - "必须满足"

# ===================== 模型文件名配置 =====================
model:
  intent_classifier: intent_classifier.pkl  # 意图分类器模型文件名
  sequence_slot_filler: sequence_slot_filler.pkl  # 序列槽位填充器模型文件名

# ===================== 分类器参数 =====================
classifier:
  type: logistic   # 分类器类型：logistic(逻辑回归)/svm(支持向量机)/random_forest(随机森林)/ensemble(集成学习)
  random_state: 42  # 随机种子
  
  # Logistic Regression参数
  logistic:
    max_iter: 1000
    C: 1.0
    penalty: l2
    solver: lbfgs
    
  # SVM参数
  svm:
    C: 1.0
    kernel: rbf
    gamma: scale
    probability: true
    max_iter: 1000
    
  # Random Forest参数
  random_forest:
    n_estimators: 100
    max_depth: 10
    min_samples_split: 2
    min_samples_leaf: 1
    
  # 集成学习参数
  ensemble:
    base_classifiers: [logistic, svm, random_forest]
    voting_method: soft  # soft/hard
    weights: [0.7, 0.2, 0.1]  # 各分类器权重
    
  # 类别权重（用于处理不平衡数据）
  class_weights:
    Query: 2.0    # 提升Query权重（当前准确率低）
    List: 1.0     # 保持List权重（当前准确率高）
    Compare: 1.5  # 适度提升Compare权重
    Rule: 1.2     # 适度提升Rule权重

slot_buffer_max_size: 1000  # 槽位缓存最大长度
slot_classifier_type: logistic # 槽位分类器类型
slot_classifier_max_iter: 200  # 槽位分类器最大迭代次数

# ===================== 模型导出与评估 =====================
model_output_dir: intent_training/model_output/   # 统一的模型产出目录，训练、评估、导出、上线全流程共用
report_path: intent_training/report/        # 评估报告保存路径

# ===================== 不确定性与解释性参数 =====================
uncertainty:
  review_threshold: 0.5     # 人工审核阈值，超过则需人工复核
  auto_confidence_threshold: 0.85  # 自动信任阈值，高于此值自动通过
  methods: [entropy, confidence, margin]  # 不确定性计算方法
  combined_weight:          # 各方法权重，和为1
    entropy: 0.4            # 熵方法权重
    confidence: 0.4         # 置信度方法权重
    margin: 0.2             # 边距方法权重
  buffer_max_size: 1000     # 不确定性查询缓存最大长度 

# ===================== 评估与导出配置 =====================
evaluation:
  run_evaluation: true  # 总开关
  intent_classifier:
    enabled: true        # 意图分类器评估开关
    threshold: 0.90      # 导出阈值
  sequence_slot_filler:
    enabled: true        # 槽位填充器评估开关  
    threshold: 0.50      # 导出阈值
  export:
    enabled: true        # 导出开关
    export_dir: "models/"  # 导出目录
    override: true       # 是否覆盖


